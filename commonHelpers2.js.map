{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css'\n\nconst btnStart = document.querySelector('button[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst day = document.querySelector('span[data-days]');\nconst hour = document.querySelector('span[data-hours]');\nconst minute = document.querySelector('span[data-minutes]');\nconst second = document.querySelector('span[data-seconds]');\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (options.defaultDate >= selectedDates[0]) {\n            Notiflix.Notify.failure('Please choose a date in the future');\n        } else {\n            btnStart.disabled = false;\n        }\n    },\n};\n\nflatpickr('#datetime-picker', options);\nbtnStart.addEventListener('click', startTimer);\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\n\n/**\n * \n * @param {number} value - число (наприклад 4)\n * @returns {string} - відформатоване значення під формат xx:xx:xx:xx, для додавання до HTML сторінки (наприклад 04)\n */\nconst addLeadingZero = value => value.toString().padStart(2, \"0\");\n\nfunction startTimer() {\n    btnStart.disabled = true;\n    input.disabled = true;\n\n    const timer = setInterval(() => {\n        const currentDate = new Date();\n        const targetDate = new Date(input.value);\n        const timeDiff = targetDate - currentDate;\n\n        const { days, hours, minutes, seconds } = convertMs(timeDiff);\n\n        day.textContent = addLeadingZero(days);\n        hour.textContent = addLeadingZero(hours);\n        minute.textContent = addLeadingZero(minutes);\n        second.textContent = addLeadingZero(seconds);\n\n        if (days === 0 && hours === 0 && minutes === 0 && seconds === 0) {\n            clearInterval(timer);\n            btnStart.disabled = false;\n            input.disabled = false;\n        }\n    }, 1000);\n}"],"names":["btnStart","input","day","hour","minute","second","options","selectedDates","Notiflix","flatpickr","startTimer","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","timer","currentDate","timeDiff"],"mappings":"0IAMA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAM,SAAS,cAAc,iBAAiB,EAC9CC,EAAO,SAAS,cAAc,kBAAkB,EAChDC,EAAS,SAAS,cAAc,oBAAoB,EACpDC,EAAS,SAAS,cAAc,oBAAoB,EAEpDC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACfD,EAAQ,aAAeC,EAAc,GACrCC,EAAS,OAAO,QAAQ,oCAAoC,EAE5DR,EAAS,SAAW,EAE3B,CACL,EAEAS,EAAU,mBAAoBH,CAAO,EACrCN,EAAS,iBAAiB,QAASU,CAAU,EAE7C,SAASC,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAQA,MAAMC,EAAiBC,GAASA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAEhE,SAASR,GAAa,CAClBV,EAAS,SAAW,GACpBC,EAAM,SAAW,GAEjB,MAAMkB,EAAQ,YAAY,IAAM,CAC5B,MAAMC,EAAc,IAAI,KAElBC,EADa,IAAI,KAAKpB,EAAM,KAAK,EACTmB,EAExB,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUU,CAAQ,EAE5DnB,EAAI,YAAce,EAAeJ,CAAI,EACrCV,EAAK,YAAcc,EAAeH,CAAK,EACvCV,EAAO,YAAca,EAAeF,CAAO,EAC3CV,EAAO,YAAcY,EAAeD,CAAO,EAEvCH,IAAS,GAAKC,IAAU,GAAKC,IAAY,GAAKC,IAAY,IAC1D,cAAcG,CAAK,EACnBnB,EAAS,SAAW,GACpBC,EAAM,SAAW,GAExB,EAAE,GAAI,CACX"}